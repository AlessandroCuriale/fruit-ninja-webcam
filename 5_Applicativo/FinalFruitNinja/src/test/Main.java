/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test;

import java.awt.Frame;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JRadioButton;

/**
 *
 * @author Curiale Alessandro
 */
public class Main extends javax.swing.JFrame{

    private static final Logger LOGGER = Logger.getLogger( Main.class.getName() );
    
    /**
     * Creates new form Main
     */
    public Main() {
        setTitle("FruitNinja");
        initComponents();
        this.setSize(1920, 1080);
    }
    
    public void startGame(){
        this.gamePanel.startGameThread();
    }
    
    public void startCam(){
        
        handGesture.startCapture();
    }
 
    public void createList(){
        this.settingsPanel.createList();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameMenu = new test.GameMenu();
        settingsPanel = new test.SettingsPanel();
        gamePanel = new test.GamePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        gameMenu.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gameMenuPropertyChange(evt);
            }
        });
        getContentPane().add(gameMenu);

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 549, Short.MAX_VALUE)
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
        );

        getContentPane().add(settingsPanel);
        getContentPane().add(gamePanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gameMenuPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_gameMenuPropertyChange
        // TODO add your handling code here:
        if (evt.getPropertyName() == "playT"){
            this.gameMenu.setVisible(false);
            this.gamePanel.setInPoints(false);
            this.startGame();
            startCam();
            
        }
        
        if (evt.getPropertyName() == "playP"){
            this.gameMenu.setVisible(false);
            this.gamePanel.setInPoints(true);
            this.startGame();
            startCam();
        }
        
        if (evt.getPropertyName() == "capture"){
            this.gameMenu.setVisible(false);

            this.startCam();
        }

        if (evt.getPropertyName() == "list"){
            this.gameMenu.setVisible(false);
            this.createList();
        }
    }//GEN-LAST:event_gameMenuPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private test.GameMenu gameMenu;
    private test.GamePanel gamePanel;
    private test.SettingsPanel settingsPanel;
    // End of variables declaration//GEN-END:variables
    private test.HandGesture handGesture = new HandGesture();
    //public static test.SettingsPanel settingsPanel1;
}
